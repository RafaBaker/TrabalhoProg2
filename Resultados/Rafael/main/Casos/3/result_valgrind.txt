==26258== Memcheck, a memory error detector
==26258== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==26258== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==26258== Command: Resultados/Rafael/main/prog Resultados/Rafael/main/Casos/3
==26258== Parent PID: 26257
==26258== 
==26258== Use of uninitialised value of size 8
==26258==    at 0x10C262: VectorCopy (in /home/rafael/TrabalhoProg2/Resultados/Rafael/main/prog)
==26258==    by 0x10AB5A: main (in /home/rafael/TrabalhoProg2/Resultados/Rafael/main/prog)
==26258== 
==26258== Invalid write of size 8
==26258==    at 0x10C262: VectorCopy (in /home/rafael/TrabalhoProg2/Resultados/Rafael/main/prog)
==26258==    by 0x10AB5A: main (in /home/rafael/TrabalhoProg2/Resultados/Rafael/main/prog)
==26258==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==26258== 
==26258== 
==26258== Process terminating with default action of signal 11 (SIGSEGV)
==26258==  Access not within mapped region at address 0x0
==26258==    at 0x10C262: VectorCopy (in /home/rafael/TrabalhoProg2/Resultados/Rafael/main/prog)
==26258==    by 0x10AB5A: main (in /home/rafael/TrabalhoProg2/Resultados/Rafael/main/prog)
==26258==  If you believe this happened as a result of a stack
==26258==  overflow in your program's main thread (unlikely but
==26258==  possible), you can try to increase the size of the
==26258==  main thread stack using the --main-stacksize= flag.
==26258==  The main thread stack size used in this run was 8388608.
==26258== 
==26258== HEAP SUMMARY:
==26258==     in use at exit: 12,024 bytes in 40 blocks
==26258==   total heap usage: 45 allocs, 5 frees, 12,368 bytes allocated
==26258== 
==26258== LEAK SUMMARY:
==26258==    definitely lost: 0 bytes in 0 blocks
==26258==    indirectly lost: 0 bytes in 0 blocks
==26258==      possibly lost: 0 bytes in 0 blocks
==26258==    still reachable: 12,024 bytes in 40 blocks
==26258==         suppressed: 0 bytes in 0 blocks
==26258== Reachable blocks (those to which a pointer was found) are not shown.
==26258== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26258== 
==26258== Use --track-origins=yes to see where uninitialised values come from
==26258== For lists of detected and suppressed errors, rerun with: -s
==26258== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
